<UserControl
  x:Class="ResultStudioWPF.Views.UserControls.DataView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converters="clr-namespace:ResultStudioWPF.Views.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  d:DesignHeight="300"
  d:DesignWidth="300"
  DataContext="{Binding Source={StaticResource Locator}, Path=SettingsViewModel}"
  mc:Ignorable="d">
  <Grid>
    <Grid.Resources>

      <converters:MeasurementToBrushConverter x:Key="MeasurementToBrushConverter" />  
      <!--  Not in use anymore, this is the converter approach for cell background  -->
      <converters:IsOddConverter x:Key="IsOddConverter" />

      <!--  Tooltip error style  -->
      <Style
        x:Name="ErrorTooltipStyle"
        TargetType="{x:Type ToolTip}">
        <!-- <Setter Property="OverridesDefaultStyle" Value="True" /> -->
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToolTip}">
              <StackPanel Background="LightBlue">
                <WrapPanel>
                  <Image
                    Width="25"
                    Height="25"
                    Margin="0,0,5,0"
                    Source="/ResultStudioWPF;component/Images/red_round_error_warning_icon.png" />
                  <TextBox
                    Width="300"
                    Background="LightBlue"
                    Text="{TemplateBinding ToolTip.Content}"
                    TextWrapping="WrapWithOverflow" />
                </WrapPanel>
              </StackPanel>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <!--  Cell error style  -->
      <Style
        x:Key="CellErrorStyle"
        TargetType="{x:Type TextBlock}">
        <Style.Triggers>
          <Trigger Property="Validation.HasError" Value="true">
            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            <Setter Property="Background" Value="OrangeRed" />
          </Trigger>
        </Style.Triggers>
      </Style>



    </Grid.Resources>

    <DataGrid
      x:Name="SubFrameDataGrid"
      Margin="0,20,0,20"
      AutoGenerateColumns="False"
      Background="Transparent"
      HeadersVisibility="Column"
      IsReadOnly="True"
      ItemsSource="{Binding DataSet}"
      SelectedItem="{Binding MeasurementPoint}">
      <DataGrid.RowStyle>
        <!--  Row background coloring template  -->
        <Style TargetType="{x:Type DataGridRow}">
          <Style.Triggers>
            <DataTrigger
              Binding="{Binding Index, Converter={StaticResource IsOddConverter}}"
              Value="True">
              <Setter Property="Background" Value="LightGray" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </DataGrid.RowStyle>
      <DataGrid.Columns>
        <DataGridTextColumn
          Width="2*"
          Binding="{Binding Index, ValidatesOnNotifyDataErrors=True}"
          Header="Measurement" />
        <DataGridTextColumn
          Width="*"
          Binding="{Binding Axis}"
          Header="Axis" />
        <DataGridTextColumn
          Width="2*"
          Binding="{Binding Value, StringFormat={}{0:#.000}, ValidatesOnNotifyDataErrors=True}"
          ElementStyle="{StaticResource CellErrorStyle}"
          Header="Value" />

        <!--<DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource MeasurementToBrushConverter}" >
                                        <Binding Path="Value" />
                                        <Binding Path="AxisName" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.ElementStyle>-->
      </DataGrid.Columns>
    </DataGrid>
  </Grid>
</UserControl>

